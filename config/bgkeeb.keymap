// used swweeep default keymap

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        a1 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 12>;
        };

        a2 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        b1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <12 11>;
        };

        b2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <17 18>;
        };

        c1 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
        };

        c2 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
        };

        d1 {
            bindings = <&kp BACKSLASH>;
            key-positions = <14 13>;
        };

        d2 {
            bindings = <&kp SLASH>;
            key-positions = <15 16>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        get_bt {
            bindings = <&mo 4>;
            key-positions = <36 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q             &kp W             &kp E                  &kp R                 &kp T          &kp Y                    &kp U                          &kp I                &kp O              &kp P
&mt LEFT_GUI A    &mt LEFT_ALT S    &mt LEFT_SHIFT D       &mt LEFT_CONTROL F    &kp G          &kp H                    &mt RIGHT_CONTROL J            &mt RIGHT_SHIFT K    &mt RIGHT_ALT L    &mt RIGHT_GUI SEMICOLON
&kp Z             &kp X             &kp C                  &kp V                 &kp B          &kp N                    &kp M                          &kp COMMA            &kp DOT            &kp FSLH
                  &none             &mt LEFT_GUI DELETE    &lt 2 TAB             &lt 1 SPACE    &mt RIGHT_SHIFT ENTER    &mt RIGHT_CONTROL BACKSPACE    &lt 3 ESCAPE         &none
            >;
        };

        nav {
            bindings = <
&kp ESC         &mkp RCLK         &mmv MOVE_UP      &mkp LCLK          &msc SCRL_UP      &kp HOME          &kp PAGE_DOWN     &kp PAGE_UP      &kp END            &none
&none           &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &msc SCRL_DOWN    &kp LEFT_ARROW    &kp DOWN_ARROW    &kp UP_ARROW     &kp RIGHT_ARROW    &none
&kp CAPSLOCK    &kp LG(F2)        &kp LG(F1)        &kp LG(F3)         &kp CAPSLOCK      &kp LG(N)         &kp LS(LC(C))     &kp LC(LS(V))    &kp INSERT         &none
                &none             &none             &none              &trans            &mkp LCLK         &mkp MCLK         &mkp RCLK        &none
            >;
        };

        sym {
            bindings = <
&kp NUMBER_4    &kp NUMBER_2    &kp NUMBER_3         &kp NUMBER_1     &kp NUMBER_5     &kp NUMBER_6    &kp NUMBER_0           &kp NUMBER_8     &kp NUMBER_9    &kp NUMBER_7
&kp CARET       &kp TILDE       &kp DOUBLE_QUOTES    &kp COLON        &kp AMPERSAND    &kp PLUS        &kp MINUS              &kp ASTERISK     &kp AT_SIGN     &kp EXCLAMATION
&kp CAPSLOCK    &kp GRAVE       &kp SINGLE_QUOTE     &kp SEMICOLON    &kp DOLLAR       &kp EQUAL       &kp UNDERSCORE         &kp HASH         &kp PERCENT     &kp QUESTION
                &none           &none                &trans           &none            &kp PIPE        &mt LCTRL BACKSPACE    &kp BACKSLASH    &none
            >;
        };

        func {
            bindings = <
&kp F4    &kp F2        &kp F3         &kp F1        &kp F5               &kp F6                  &kp F10              &kp F8         &kp F9        &kp F7
&none     &kp LG(F7)    &kp LG(F8)     &kp LG(F9)    &kp C_VOL_UP         &kp C_BRIGHTNESS_INC    &kp LG(F12)          &kp LG(F4)     &kp F11       &kp F12
&none     &none         &kp LG(F10)    &kp C_MUTE    &kp C_VOLUME_DOWN    &kp C_BRIGHTNESS_DEC    &kp LG(SEMICOLON)    &kp LG(F11)    &kp LG(F5)    &kp LG(F6)
          &none         &none          &none         &none                &none                   &none                &trans         &none
            >;
        };

        bt {
            bindings = <
&trans    &trans    &trans    &trans          &trans          &trans        &bt BT_PRV      &bt BT_NXT      &trans          &bootloader
&trans    &trans    &trans    &trans          &kp NUMBER_1    &trans        &trans          &trans          &trans          &trans
&trans    &trans    &trans    &trans          &trans          &bt BT_CLR    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3
          &trans    &trans    &out OUT_USB    &trans          &trans        &out OUT_BLE    &trans          &trans
            >;
        };
    };
};
