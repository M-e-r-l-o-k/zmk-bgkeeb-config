// used swweeep default keymap

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q             &kp W             &kp E          &kp R          &kp T          &kp Y                    &kp U                  &lt 6 I            &kp O         &kp P
&mt LEFT_GUI A    &mt LEFT_ALT S    &mt LSHFT D    &mt LCTRL F    &kp G          &kp H                    &mt RCTRL J            &mt RIGHT_ALT K    &mt RGUI L    &mt RIGHT_GUI SEMICOLON
&kp Z             &kp X             &kp C          &kp V          &kp B          &kp N                    &kp M                  &kp COMMA          &kp DOT       &kp FSLH
                  &kp F3            &kp DEL        &lt 2 TAB      &lt 1 SPACE    &mt RIGHT_SHIFT ENTER    &mt RCTRL BACKSPACE    &lt 3 ESCAPE       &kp F4
            >;
        };

        nav {
            bindings = <
&kp ESC     &kp PG_UP    &kp UP      &kp PG_DN    &trans     &kp ASTRK    &kp N7       &kp N8     &kp N9    &kp MINUS
&kp HOME    &kp LEFT     &kp DOWN    &kp RIGHT    &kp END    &kp FSLH     &kp N4       &kp N5     &kp N6    &kp PLUS
&trans      &trans       &trans      &trans       &trans     &kp EQUAL    &kp N1       &kp N2     &kp N3    &kp N0
            &trans       &trans      &trans       &kp TAB    &kp BSPC     &kp SPACE    &kp DOT    &trans
            >;
        };

        sym {
            bindings = <
&kp NUMBER_4    &kp NUMBER_2    &kp NUMBER_3         &kp NUMBER_1     &kp NUMBER_5     &kp NUMBER_6    &kp NUMBER_0           &kp NUMBER_8     &kp NUMBER_9    &kp NUMBER_7
&kp CARET       &kp TILDE       &kp DOUBLE_QUOTES    &kp COLON        &kp AMPERSAND    &kp PLUS        &kp MINUS              &kp ASTERISK     &kp AT_SIGN     &kp EXCLAMATION
&kp CAPS        &kp GRAVE       &kp SINGLE_QUOTE     &kp SEMICOLON    &kp DOLLAR       &kp EQUAL       &kp UNDERSCORE         &kp HASH         &kp PERCENT     &kp QUESTION
                &trans          &trans               &trans           &trans           &kp PIPE        &mt LCTRL BACKSPACE    &kp BACKSLASH    &trans
            >;
        };

        func {
            bindings = <
&bootloader     &kp LS(PG_UP)    &kp LS(UP)      &kp LS(PG_DN)    &trans         &kp C_MUTE          &kp F7    &kp F8       &kp F9    &kp F10
&kp LS(HOME)    &kp LS(LEFT)     &kp LS(DOWN)    &kp LS(RIGHT)    &kp LS(END)    &kp K_VOL_UP        &kp F4    &kp F5       &kp F6    &kp F11
&bt BT_SEL 3    &bt BT_SEL 2     &bt BT_SEL 1    &bt BT_SEL 0     &bt BT_CLR     &kp K_VOL_DN        &kp F1    &kp F2       &kp F3    &kp F12
                &trans           &out OUT_USB    &out OUT_BLE     &trans         &kp C_PLAY_PAUSE    &trans    &kp SPACE    &trans
            >;
        };

        media {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans        &bt BT_PRV      &bt BT_NXT      &trans          &trans
&trans    &trans    &trans    &trans    &trans    &trans        &trans          &trans          &trans          &trans
&trans    &trans    &trans    &trans    &trans    &bt BT_CLR    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3
          &trans    &trans    &trans    &trans    &trans        &out OUT_BLE    &out OUT_USB    &trans
            >;
        };

        mouse {
            bindings = <
&bootloader    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans         &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans         &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
               &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        winnav {
            bindings = <
&trans    &trans          &kp LG(UP)      &trans           &trans    &trans    &trans    &trans    &trans    &trans
&trans    &kp LG(LEFT)    &kp LG(DOWN)    &kp LG(RIGHT)    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans          &trans          &trans           &trans    &trans    &trans    &trans    &trans    &trans
          &trans          &trans          &trans           &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};
